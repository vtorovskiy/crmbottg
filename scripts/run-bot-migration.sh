#!/bin/bash
# scripts/run-bot-migration.sh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞

echo "üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è Telegram –±–æ—Ç–∞ SQUARE..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
echo "üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
docker exec telegram-crm-db pg_isready -U postgres -d telegram_crm

if [ $? -ne 0 ]; then
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ docker-compose up -d postgres"
    exit 1
fi

echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
echo "üìä –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Ç–∞–±–ª–∏—Ü –±–æ—Ç–∞..."
docker exec -i telegram-crm-db psql -U postgres -d telegram_crm << 'EOF'

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
\dt bot_*

-- –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é (–æ–Ω–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –≤ —Ñ–∞–π–ª–µ bot_database_migration)
-- –ó–¥–µ—Å—å –º—ã –º–æ–∂–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
SELECT
    table_name,
    (SELECT COUNT(*) FROM information_schema.columns WHERE table_name = t.table_name) as column_count
FROM information_schema.tables t
WHERE table_schema = 'public'
    AND table_name LIKE 'bot_%'
ORDER BY table_name;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
SELECT setting_key, setting_value
FROM bot_settings
WHERE setting_key IN ('yuan_rate', 'channel_username', 'api_limit_per_user')
ORDER BY setting_key;

-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
SELECT
    'bot_users' as table_name, COUNT(*) as records FROM bot_users
UNION ALL
SELECT
    'bot_settings' as table_name, COUNT(*) as records FROM bot_settings
UNION ALL
SELECT
    'bot_orders' as table_name, COUNT(*) as records FROM bot_orders;

EOF

if [ $? -eq 0 ]; then
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ backend/.env:"
    echo "   TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω"
    echo "   TELEGRAM_WEBHOOK_SECRET=–≤–∞—à_—Å–µ–∫—Ä–µ—Ç"
    echo ""
    echo "2. –û–±–Ω–æ–≤–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:"
    echo "   UPDATE bot_settings SET setting_value = 'TELEGRAM_ID_1' WHERE setting_key = 'admin_chat_1';"
    echo "   UPDATE bot_settings SET setting_value = 'TELEGRAM_ID_2' WHERE setting_key = 'admin_chat_2';"
    echo "   UPDATE bot_settings SET setting_value = 'TELEGRAM_ID_3' WHERE setting_key = 'admin_chat_3';"
    echo ""
    echo "3. –î–æ–±–∞–≤—å—Ç–µ –º–∞—Ä—à—Ä—É—Ç –±–æ—Ç–∞ –≤ backend/src/index.ts:"
    echo "   import botRoutes from '@/routes/bot'"
    echo "   app.use('/api/bot', botRoutes)"
    echo ""
    echo "4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ bot service –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:"
    echo "   await botService.initialize()"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏"
    exit 1
fi