-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã messages
-- –í—ã–ø–æ–ª–Ω–∏—Ç—å: docker exec -i telegram-crm-db psql -U postgres -d telegram_crm < scripts/fixed_migration.sql

BEGIN;

-- –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É messages
ALTER TABLE messages
ADD COLUMN IF NOT EXISTS sent_by_user_id INTEGER REFERENCES users(id),
ADD COLUMN IF NOT EXISTS is_read BOOLEAN DEFAULT false,
ADD COLUMN IF NOT EXISTS reply_to_message_id INTEGER,
ADD COLUMN IF NOT EXISTS edited_at TIMESTAMP,
ADD COLUMN IF NOT EXISTS metadata JSONB;

-- –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–æ–ª—è–º
COMMENT ON COLUMN messages.sent_by_user_id IS 'ID –∞–¥–º–∏–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–ª—è –∏—Å—Ö–æ–¥—è—â–∏—Ö)';
COMMENT ON COLUMN messages.is_read IS '–ü—Ä–æ—á–∏—Ç–∞–Ω–æ –ª–∏ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–º';
COMMENT ON COLUMN messages.reply_to_message_id IS 'ID —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—á–∞—é—Ç';
COMMENT ON COLUMN messages.edited_at IS '–í—Ä–µ–º—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è';
COMMENT ON COLUMN messages.metadata IS '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞, mime type –∏ —Ç.–¥.)';

-- –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏—Å—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
UPDATE messages
SET is_read = true
WHERE direction = 'outgoing' AND is_read IS NULL;

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
CREATE INDEX IF NOT EXISTS idx_messages_contact_id_created_at ON messages(contact_id, created_at DESC);
CREATE INDEX IF NOT EXISTS idx_messages_direction_is_read ON messages(direction, is_read) WHERE direction = 'incoming';
CREATE INDEX IF NOT EXISTS idx_messages_content_search ON messages USING gin(to_tsvector('russian', content));
CREATE INDEX IF NOT EXISTS idx_messages_sent_by_user ON messages(sent_by_user_id) WHERE sent_by_user_id IS NOT NULL;

-- –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_messages_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS trigger_messages_updated_at ON messages;
CREATE TRIGGER trigger_messages_updated_at
  BEFORE UPDATE ON messages
  FOR EACH ROW
  EXECUTE FUNCTION update_messages_updated_at();

-- –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏–∑ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è
CREATE OR REPLACE FUNCTION create_contact_from_telegram(
  p_telegram_id VARCHAR,
  p_telegram_username VARCHAR DEFAULT NULL,
  p_first_name VARCHAR DEFAULT NULL,
  p_last_name VARCHAR DEFAULT NULL
) RETURNS INTEGER AS $$
DECLARE
  contact_id INTEGER;
BEGIN
  -- –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–∞–∫—Ç
  SELECT id INTO contact_id
  FROM contacts
  WHERE telegram_id = p_telegram_id;

  -- –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
  IF contact_id IS NULL THEN
    INSERT INTO contacts (telegram_id, telegram_username, created_at, updated_at)
    VALUES (p_telegram_id, p_telegram_username, NOW(), NOW())
    RETURNING id INTO contact_id;

    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–≥
    INSERT INTO contact_data (contact_id, field_id, value)
    SELECT contact_id, cf.id,
           CASE cf.name
             WHEN '–ò–º—è' THEN COALESCE(p_first_name, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
             WHEN '–¢–µ–ª–µ—Ñ–æ–Ω' THEN NULL
             WHEN 'Email' THEN NULL
             WHEN '–ó–∞–º–µ—Ç–∫–∏' THEN '–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ Telegram'
           END
    FROM contact_fields cf
    WHERE cf.name IN ('–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω', 'Email', '–ó–∞–º–µ—Ç–∫–∏')
      AND COALESCE(
        CASE cf.name
          WHEN '–ò–º—è' THEN COALESCE(p_first_name, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
          WHEN '–ó–∞–º–µ—Ç–∫–∏' THEN '–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ Telegram'
        END, ''
      ) != '';
  ELSE
    -- –û–±–Ω–æ–≤–ª—è–µ–º username –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è
    UPDATE contacts
    SET telegram_username = p_telegram_username, updated_at = NOW()
    WHERE id = contact_id
      AND (telegram_username != p_telegram_username OR telegram_username IS NULL);
  END IF;

  RETURN contact_id;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–∞—Ö
-- üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è telegram_id
CREATE OR REPLACE VIEW chat_list AS
SELECT
  c.id as contact_id,
  c.telegram_id,
  c.telegram_username,

  -- –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è
  COALESCE(
    c.telegram_username,
    (SELECT value FROM contact_data cd
     JOIN contact_fields cf ON cd.field_id = cf.id
     WHERE cd.contact_id = c.id AND cf.name = '–ò–º—è'
     LIMIT 1),
    CONCAT('User_', c.telegram_id)
  ) as display_name,

  -- –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  latest_msg.content as last_message,
  latest_msg.type as last_message_type,
  latest_msg.direction as last_message_direction,
  latest_msg.created_at as last_message_time,

  -- –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  COALESCE(unread.count, 0) as unread_count,

  -- –û–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å (üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤)
  CASE
    WHEN bu.last_activity > NOW() - INTERVAL '5 minutes' THEN 'online'
    WHEN bu.last_activity > NOW() - INTERVAL '1 hour' THEN 'recently'
    ELSE 'offline'
  END as online_status,

  -- –ú–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
  c.created_at as contact_created_at,
  c.updated_at as contact_updated_at

FROM contacts c

-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –±–æ—Ç–∞ (üîß –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤)
LEFT JOIN bot_users bu ON c.telegram_id = bu.telegram_id::VARCHAR

-- –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
LEFT JOIN LATERAL (
  SELECT content, type, direction, created_at
  FROM messages
  WHERE contact_id = c.id
  ORDER BY created_at DESC
  LIMIT 1
) latest_msg ON true

-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
LEFT JOIN LATERAL (
  SELECT COUNT(*) as count
  FROM messages
  WHERE contact_id = c.id
    AND direction = 'incoming'
    AND (is_read IS NULL OR is_read = false)
) unread ON true

-- –¢–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
WHERE EXISTS (
  SELECT 1 FROM messages WHERE contact_id = c.id
);

COMMIT;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
SELECT 'Migration completed successfully!' as status;

-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã messages
\d messages

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
SELECT COUNT(*) as contact_count FROM chat_list;